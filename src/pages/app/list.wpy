<template>
  <view class="container" wx:if="{{init}}">
    <view class="weui-cells weui-cells_after-title">
      <view class="weui-cell weui-cell_select app-template-box">
        <view class="weui-cell__hd weui-cell__hd_in-select-after">
          <view class="weui-label">程序模板</view>
        </view>
        <view class="weui-cell__bd">
          <picker bindchange="appTemplateChange" value="{{appTemplateIndex}}" range="{{appTemplates}}"
                  range-key="{{'name'}}">
            <view class="weui-select weui-select_in-select-after">{{appTemplates[appTemplateIndex].name}}</view>
          </picker>
        </view>
      </view>
    </view>
    <view class="box"></view>
    <repeat for="{{apps}}" key="index" index="index" item="item">
      <App :app.sync="item" @select.user="select" @viewHeadImg.user="viewHeadImg"/>
    </repeat>
    <view class="box"></view>
    <view class="row-between edit-box">
      <view class="select-box row" @tap.stop="checkAll">
        <icon class="weui-icon-checkbox_{{!checked ? 'circle':'success'}}" type="{{!checked ? 'circle':'success'}}"
              size="23"></icon>
        <text class="ml20 icon-test">全选</text>
      </view>
      <!--不要传递参数-->
      <view class="page__bd">
        <button class="zan-btn zan-btn--small delete-box" type="default" @tap="open">
          批量操作
          <text class="iconfont icon-icon"></text>
        </button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import base from '../../mixins/base';
  import open from '../../api/open';
  import App from '../../components/open/app';
  import Tips from '../../utils/Tips';
  import Event from '../../utils/Event';

  export default class AppList extends wepy.page {
    data= {
      apps: null,
      init: false,
      appTemplates: [
        {
          id: 0,
          key: 'Dining',
          name: '乐享餐饮'
        },
        {
          id: 1,
          key: 'Shop',
          name: '乐享商城'
        },
        {
          id: 2,
          key: 'SellerHelper',
          name: '乐享商城助手'
        }
      ],
      key: 'Dining',
      appTemplateIndex: 0,
      actionSheetItems: [
        'item1',
        'item2',
        'item3'
      ],
      actionSheetHidden: true
    };
    async onLoad () {
      await this.doLoad();
      Event.listen('APP_LIST_UPDATE', this.doLoad.bind(this), this)
    };
    async doLoad() {
      this.apps = await open.apps(this.key);
      this.loaded();
    }
    async onPullDownRefresh () {
      await this.doLoad();
      wepy.stopPullDownRefresh();
    }
    methods = {
      select(id) {
        const app = this.apps.find(item => item.id == id);
        app.check = !app.check;
      },
      checkAll() {
        const checked = !this.checked;
        this.apps.forEach(item => {
          item.check = checked;
        })
      },
      async appTemplateChange(e) {
        this.key = this.appTemplates[e.detail.value].key;
        this.appTemplateIndex = e.detail.value;
        await this.doLoad(this.key);
      },
      async open () {
        const that = this;
        wx.showActionSheet({
          itemList: ['发布体验版', '发布审核', '查询审核状态', '发布上线', '版本回退'],
          success: async function(res) {
            if (!res.cancel) {
              if (res.tapIndex == 0) {
                return that.submitDemo()
              } else if (res.tapIndex == 1) {
                return await that.audit()
              } else if (res.tapIndex == 2) {
                return await that.status()
              } else if (res.tapIndex == 3) {
                return await that.publish()
              } else if (res.tapIndex == 4) {
                return await that.revert()
              }
            }
          }
        });
      },
      async viewHeadImg (appId) {
        const url = await open.qrCode(appId);
        if (url !== null && url !== 'null') {
          Tips.success('查询成功');
          wepy.previewImage({
            current: url.message, // 当前显示图片的http链接
            urls: [url.message] // 需要浏览的图片http链接列表
          });
        } else {
          Tips.alert('无二维码');
        }
      }
    };
    async audit() {
      const apps = this.getCheckedApps();
      const param = {
        mode: 'audit',
        template: JSON.stringify(apps)
      };
      this.$navigate('template', param);
    };
    submitDemo() {
      const apps = this.getCheckedApps();
      const param = {
        mode: 'demo',
        template: JSON.stringify(apps)
      };
      this.$navigate('template', param);
    };
    async status() {
      const apps = this.getCheckedApps();
      const results = await open.statusAudit(apps);
      await Tips.success('查询成功');
      this.loaded();
      this.$preload('param', results);
      this.$navigate('status');
    };
    async publish() {
      const apps = this.getCheckedApps();
      await Tips.confirm('确定要发布该版本？');
      await open.publish(apps);
      await Tips.success('发布成功');
      this.loaded();
    };
    async revert() {
      const apps = this.getCheckedApps();
      if (apps.length > 1) {
        await Tips.modal('单次只可回退一个小程序');
      } else {
        await Tips.confirm('确定要回退该版本？');
        await open.revert(apps[0].wxAppid);
        await Tips.success('回退成功');
      }
      this.loaded();
    };
    getCheckedApps() {
      const apps = this.apps.filter(item => item.check == true);
      if (apps == null || apps.length < 1) {
        Tips.alert('请选择');
        throw new Error('尚未选择任何小程序');
      } else {
        return apps;
      }
    }
    computed = {
      checked() {
        if (this.apps == null) return;
        return this.apps.every(item => item.check);
      }
    };
    mixins = [base];
    components = {
      App: App
    };
    config = {
      navigationBarTitleText: '小程序审核结果',
      enablePullDownRefresh: true
    };
  }
</script>

<style lang="scss">
  @import "../../styles/variable";
  @import "../../styles/weui.scss";
  @import '../../styles/stylesheet.scss';

  .app-template-box{
    background-color: #fff;
    position: fixed;
    top: 0;
    width: 101%;
    height: rpx(85);
  }
  .box{
    height: rpx(100);
  }
  .edit-box{
    height: rpx(50);
    position: fixed;
    bottom: 0;
    padding: rpx(20) 0;
    background-color: white;
    border-top: $border;
    border-bottom: $border;
    width: 100%;
  }
  .select-box{
    margin-left: rpx(20);
  }
  .delete-box{
    margin-right: rpx(20);
  }
</style>
